<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<context:property-placeholder location="classpath*:database.properties" ignore-unresolvable="true"/>

	<!-- spring配置duid数据库连接池的数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<!-- 基本属性 url、user、password127.0.0.1 -->
		<property name="driverClassName" value="${spring.datasource.driver-class-name}"/>
		<property name="url" value="${spring.datasource.url}"/>
		<property name="username" value="${spring.datasource.username}"/>
		<property name="password" value="${spring.datasource.password}"/>

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="2"/>
		<property name="minIdle" value="1"/>
		<property name="maxActive" value="20"/>

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000"/>

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000"/>

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000"/>

		<!-- 验证连接有效与否的SQL，不同的数据配置不同 -->

		<property name="validationQuery" value="SELECT 'x' from dual "/>
		<property name="testWhileIdle" value="true"/>
		<property name="testOnBorrow" value="false"/>
		<property name="testOnReturn" value="false"/>

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true"/>
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>

		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="stat"/>
	</bean>

	<!-- mybatis整合spring -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<property name="typeAliasesPackage" value="com.zgl.spring.environment"/>
		<property name="configurationProperties">
			<props>
				<!-- 数据库字段下划线转驼峰式,这个参数好像不起作用 -->
				<prop key="mapUnderscoreToCamelCase">true</prop>
			</props>
		</property>
		<property name="plugins">
			<array>
				<!-- 分页插件: https://github.com/pagehelper-->
				<bean class="com.github.pagehelper.PageInterceptor">
					<property name="properties">
						<props>
							<prop key="supportMethodsArguments">true</prop>
							<prop key="params">pageNum=page;pageSize=size</prop>
						</props>
					</property>
				</bean>
			</array>
		</property>
		<property name="mapperLocations" value="classpath:mapper/*.xml"/>
	</bean>

	<!-- 自动扫描mapper，并加入spring容器,使用mybatis通用mapper, 通用mapper: https://github.com/abel533/Mapper -->
	<bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.zgl.spring.environment.mapper"/>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
		<property name="properties">
			<value>mappers=tk.mybatis.mapper.common.Mapper</value>
		</property>
	</bean>

	<!--spring配置事务(我用的是Spring自带的 JdbcTemplate) -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<!--<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="interceptorPointCuts"
		              expression="execution(* com.zgl.spring.environment.service..*.*(..))" />
		<aop:advisor advice-ref="txAdvice"
		             pointcut-ref="interceptorPointCuts" />
	</aop:config>-->

	<!-- 采用注解配置事务 -->
	<tx:annotation-driven transaction-manager="txManager"/>


</beans>